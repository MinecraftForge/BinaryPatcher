import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'eclipse'
    id 'maven-publish'
    alias libs.plugins.licenser
    alias libs.plugins.gradleutils
    alias libs.plugins.versions
    alias libs.plugins.shadow
    alias libs.plugins.jarsigner
}

final projectDisplayName = 'Binary Patcher'
final projectArtifactId = base.archivesName = 'binarypatcher'
final projectVendor = 'Forge Development LLC'
description = 'Creates and applies binary patches for jar files at the class level.'
group = 'net.minecraftforge'
version = gitversion.tagOffset

println "Version: $version"

jarSigner.autoDetect()

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

dependencies {
    implementation libs.srgutils
    implementation libs.jopt.simple
    implementation libs.lzma
    implementation libs.xdelta

    testImplementation libs.junit.api
    testRuntimeOnly libs.bundles.junit.runtime
}

license {
    header rootProject.file('LICENSE-header.txt')
    newLine false
}

tasks.named('jar', Jar) {
    manifest {
        attributes([
            'Main-Class'            : 'net.minecraftforge.binarypatcher.ConsoleTool',
            'Specification-Title'   : projectDisplayName,
            'Specification-Vendor'  : projectVendor,
            'Specification-Version' : gitversion.info.tag,
            'Implementation-Title'  : "$project.group:$project.name",
            'Implementation-Vendor' : projectVendor,
            'Implementation-Version': project.version
        ] as LinkedHashMap)
    }

    jarSigner.sign(it)
}

tasks.named('shadowJar', ShadowJar) {
    archiveClassifier = 'fatjar'

    jarSigner.sign(it)
}

artifacts {
    archives shadowJar
}

test {
    useJUnitPlatform()
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.java

        artifactId = projectArtifactId

        pom { pom ->
            name = projectDisplayName
            description = project.description

            gradleutils.pom.setGitHubDetails pom

            licenses {
                license gradleutils.pom.licenses.LGPLv2_1
            }

            developers {
                developer gradleutils.pom.developers.LexManos
            }
        }
    }

    repositories {
        maven gradleutils.publishingForgeMaven
    }
}
